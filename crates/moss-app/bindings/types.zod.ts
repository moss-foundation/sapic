// Generated by ts-to-zod
import { jsonValueSchema } from "@repo/moss-bindingutils";
import { z } from "zod";
import {
  accountKindSchema,
  configurationParameterTypeSchema,
  configurationTargetSchema,
  logLevelSchema,
  themeIdSchema,
  themeModeSchema,
} from "./primitives.zod";

export const localeInfoSchema = z.object({
  identifier: z.string(),
  displayName: z.string(),
  code: z.string(),
  direction: z.string().optional(),
  order: z.number().optional(),
  isDefault: z.boolean().optional(),
});

export const logDateSchema = z.object({
  year: z.number(),
  month: z.number(),
  day: z.number(),
});

export const logItemSourceInfoSchema = z.object({
  id: z.string(),
});

export const workspaceInfoSchema = z.object({
  id: z.string(),
  name: z.string(),
  lastOpenedAt: z.bigint().optional(),
});
export const addAccountParamsSchema = z.object({
  host: z.string(),
  label: z.string().optional(),
  kind: accountKindSchema,
  pat: z.string().optional(),
});

export const colorThemeInfoSchema = z.object({
  identifier: themeIdSchema,
  displayName: z.string(),
  mode: themeModeSchema,
  order: z.number().optional(),
  source: z.string(),
  isDefault: z.boolean().optional(),
});

export const configurationSchema = z.object({
  keys: z.array(z.string()),
  contents: z.record(z.string(), jsonValueSchema),
});

export const parameterSchemaSchema = z.object({
  id: z.string(),
  default: jsonValueSchema.optional(),
  typ: configurationParameterTypeSchema,
  description: z.string().optional(),
  maximum: z.bigint().optional(),
  minimum: z.bigint().optional(),
  protected: z.boolean(),
  order: z.bigint().optional(),
  tags: z.array(z.string()),
});

export const logEntryInfoSchema = z.object({
  id: z.string(),
  timestamp: z.string(),
  level: logLevelSchema,
  resource: z.string().optional(),
  message: z.string(),
});

export const updateConfigurationParamsSchema = z.object({
  key: z.string(),
  value: jsonValueSchema,
  target: configurationTargetSchema,
});

export const configurationSchemaSchema = z.object({
  id: z.string(),
  parentId: z.string().optional(),
  order: z.bigint().optional(),
  name: z.string().optional(),
  description: z.string().optional(),
  parameters: z.array(parameterSchemaSchema),
});
