// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import { JsonValue } from "@repo/moss-bindingutils";
import { ConfigurationSchema, ConfigurationTarget } from "@repo/moss-configuration";
import { ThemeId } from "@repo/moss-theme";
import { ProfileInfo } from "@repo/moss-user";
import { WorkspaceMode } from "@repo/moss-workspace";
import type { LogLevel } from "./primitives";
import type {
  AddAccountParams,
  ColorThemeInfo,
  Configuration,
  LogDate,
  LogEntryInfo,
  LogItemSourceInfo,
  WorkspaceInfo,
} from "./types";

/**
 * @category Operation
 */
export type BatchDeleteLogInput = { ids: Array<string> };

/**
 * @category Operation
 */
export type BatchDeleteLogOutput = { deletedEntries: Array<LogItemSourceInfo> };

/**
 * @category Operation
 */
export type CancelRequestInput = { request_id: string };

/**
 * @category Operation
 */
export type CloseWorkspaceInput = {
  /**
   * The workspace id is required to ensure the close function
   * is only called when a workspace is open.
   */
  id: string;
};

/**
 * @category Operation
 */
export type CloseWorkspaceOutput = {
  /**
   * The id of the workspace that was closed.
   */
  id: string;
};

/**
 * @category Operation
 */
export type CreateProfileInput = { name: string; isDefault?: boolean };

/**
 * @category Operation
 */
export type CreateProfileOutput = { profile_id: string };

/**
 * @category Operation
 */
export type CreateWorkspaceInput = { name: string; mode: WorkspaceMode; openOnCreation: boolean };

/**
 * @category Operation
 */
export type CreateWorkspaceOutput = { id: string; active: boolean };

/**
 * @category Operation
 */
export type DeleteWorkspaceInput = { id: string };

/**
 * @category Operation
 */
export type DeleteWorkspaceOutput = { id: string };

/**
 * @category Operation
 */
export type DescribeAppOutput = {
  /**
   * The id of the workspace that is currently opened.
   */
  workspace?: WorkspaceInfo;
  /**
   * The id of the profile that is currently active.
   */
  profile?: ProfileInfo;
  configuration: Configuration;
};

/**
 * @category Operation
 */
export type DescribeWorkbenchStateOutput = { prevWorkspaceId?: string };

/**
 * @category Operation
 */
export type GetColorThemeInput = { id: ThemeId };

/**
 * @category Operation
 */
export type GetColorThemeOutput = { cssContent: string };

/**
 * @category Operation
 */
export type GetTranslationNamespaceInput = { language: string; namespace: string };

/**
 * @category Operation
 */
export type GetTranslationNamespaceOutput = { contents: JsonValue };

/**
 * @category Operation
 */
export type ListColorThemesOutput = Array<ColorThemeInfo>;

/**
 * @category Operation
 */
export type ListConfigurationSchemasOutput = { schemas: ConfigurationSchema[] };

/**
 * @category Operation
 */
export type ListLanguagesOutput = LanguageInfo[];

/**
 * @category Operation
 */
export type ListLogsInput = { dates: Array<LogDate>; levels: Array<LogLevel>; resource?: string };

/**
 * @category Operation
 */
export type ListLogsOutput = { contents: Array<LogEntryInfo> };

/**
 * @category Operation
 */
export type ListWorkspacesOutput = Array<WorkspaceInfo>;

/**
 * @category Operation
 */
export type OpenWorkspaceInput = { id: string };

/**
 * @category Operation
 */
export type OpenWorkspaceOutput = { id: string };

/**
 * @category Operation
 */
export type UpdateConfigurationInput = { key: string; value: JsonValue; target: ConfigurationTarget };

/**
 * @category Operation
 */
export type UpdateProfileInput = { accountsToAdd: Array<AddAccountParams>; accountsToRemove: Array<string> };

/**
 * @category Operation
 */
export type UpdateProfileOutput = { added_accounts: Array<string>; removed_accounts: Array<string> };

/**
 * @category Operation
 */
export type UpdateWorkspaceInput = {
  /**
   * A new name for the workspace, if provided, the workspace
   * will be renamed to this name.
   */
  name?: string;
};
