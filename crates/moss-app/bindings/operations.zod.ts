// Generated by ts-to-zod
import { jsonValueSchema } from "@repo/moss-bindingutils";
import { configurationSchemaSchema, configurationTargetSchema } from "@repo/moss-configuration";
import { languageInfoSchema } from "@repo/moss-language";
import { themeIdSchema } from "@repo/moss-theme";
import { profileInfoSchema } from "@repo/moss-user";
import { workspaceModeSchema } from "@repo/moss-workspace";
import { z } from "zod";
import { logLevelSchema } from "./primitives.zod";
import {
  addAccountParamsSchema,
  colorThemeInfoSchema,
  configurationSchema,
  logDateSchema,
  logEntryInfoSchema,
  logItemSourceInfoSchema,
  workspaceInfoSchema,
} from "./types.zod";

export const batchDeleteLogInputSchema = z.object({
  ids: z.array(z.string()),
});

export const cancelRequestInputSchema = z.object({
  request_id: z.string(),
});

export const closeWorkspaceInputSchema = z.object({
  id: z.string(),
});

export const closeWorkspaceOutputSchema = z.object({
  id: z.string(),
});

export const createProfileInputSchema = z.object({
  name: z.string(),
  isDefault: z.boolean().optional(),
});

export const createProfileOutputSchema = z.object({
  profile_id: z.string(),
});

export const createWorkspaceOutputSchema = z.object({
  id: z.string(),
  active: z.boolean(),
});

export const deleteWorkspaceInputSchema = z.object({
  id: z.string(),
});

export const deleteWorkspaceOutputSchema = z.object({
  id: z.string(),
});

export const describeWorkbenchStateOutputSchema = z.object({
  prevWorkspaceId: z.string().optional(),
});

export const getColorThemeOutputSchema = z.object({
  cssContent: z.string(),
});

export const getTranslationNamespaceInputSchema = z.object({
  language: z.string(),
  namespace: z.string(),
});

export const openWorkspaceInputSchema = z.object({
  id: z.string(),
});

export const openWorkspaceOutputSchema = z.object({
  id: z.string(),
});

export const updateProfileOutputSchema = z.object({
  added_accounts: z.array(z.string()),
  removed_accounts: z.array(z.string()),
});

export const updateWorkspaceInputSchema = z.object({
  name: z.string().optional(),
});
export const batchDeleteLogOutputSchema = z.object({
  deletedEntries: z.array(logItemSourceInfoSchema),
});

export const createWorkspaceInputSchema = z.object({
  name: z.string(),
  mode: workspaceModeSchema,
  openOnCreation: z.boolean(),
});

export const describeAppOutputSchema = z.object({
  workspace: workspaceInfoSchema.optional(),
  profile: profileInfoSchema.optional(),
  configuration: configurationSchema,
});

export const getColorThemeInputSchema = z.object({
  id: themeIdSchema,
});

export const getTranslationNamespaceOutputSchema = z.object({
  contents: jsonValueSchema,
});

export const listColorThemesOutputSchema = z.array(colorThemeInfoSchema);

export const listConfigurationSchemasOutputSchema = z.object({
  schemas: z.array(configurationSchemaSchema),
});

export const listLanguagesOutputSchema = z.array(languageInfoSchema);

export const listLogsInputSchema = z.object({
  dates: z.array(logDateSchema),
  levels: z.array(logLevelSchema),
  resource: z.string().optional(),
});

export const listLogsOutputSchema = z.object({
  contents: z.array(logEntryInfoSchema),
});

export const listWorkspacesOutputSchema = z.array(workspaceInfoSchema);

export const updateConfigurationInputSchema = z.object({
  key: z.string(),
  value: jsonValueSchema,
  target: configurationTargetSchema,
});

export const updateProfileInputSchema = z.object({
  accountsToAdd: z.array(addAccountParamsSchema),
  accountsToRemove: z.array(z.string()),
});
