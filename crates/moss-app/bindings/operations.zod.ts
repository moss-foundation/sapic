// Generated by ts-to-zod
import { jsonValueSchema } from "@repo/bindings-utils";
import { z } from "zod";
import { logLevelSchema } from "./primitives.zod";
import {
  colorThemeInfoSchema,
  defaultsSchema,
  localeInfoSchema,
  logDateSchema,
  logEntryInfoSchema,
  logItemSourceInfoSchema,
  preferencesSchema,
} from "./types.zod";

export const batchDeleteLogInputSchema = z.array(z.string());

export const getColorThemeInputSchema = z.object({
  id: z.string(),
});

export const getColorThemeOutputSchema = z.object({
  cssContent: z.string(),
});

export const getTranslationsInputSchema = z.object({
  language: z.string(),
  namespace: z.string(),
});
export const batchDeleteLogOutputSchema = z.object({
  deletedEntries: z.array(logItemSourceInfoSchema),
});

export const describeAppStateOutputSchema = z.object({
  preferences: preferencesSchema,
  defaults: defaultsSchema,
  lastWorkspace: z.string().optional(),
});

export const getTranslationsOutputSchema = jsonValueSchema;

export const listColorThemesOutputSchema = z.array(colorThemeInfoSchema);

export const listLocalesOutputSchema = z.array(localeInfoSchema);

export const listLogsInputSchema = z.object({
  dates: z.array(logDateSchema),
  levels: z.array(logLevelSchema),
  resource: z.string().optional(),
});

export const listLogsOutputSchema = z.object({
  contents: z.array(logEntryInfoSchema),
});

export const setColorThemeInputSchema = z.object({
  themeInfo: colorThemeInfoSchema,
});

export const setLocaleInputSchema = z.object({
  localeInfo: localeInfoSchema,
});
