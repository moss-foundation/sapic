// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import { ResourceKey } from "@repo/bindings-utils";
import { VariableInfo } from "@repo/moss-environment";
import { Identifier } from "./primitives";
import type { CollectionInfo, EditorPartState, EnvironmentInfo, PanelPartState, SidebarPartState } from "./types";

export type CreateCollectionInput = { name: string };

export type CreateCollectionOutput = { id: Identifier };

export type DeleteCollectionInput = { id: Identifier };

export type DeleteCollectionOutput = { id: Identifier };

export type DescribeEnvironmentInput = { key: ResourceKey };

export type DescribeEnvironmentOutput = { variables: VariableInfo };

export type DescribeStateOutput = { editor?: EditorPartState; sidebar?: SidebarPartState; panel?: PanelPartState };

export type DescribeWorkspaceOutput = { collections: Array<CollectionInfo>; environments: Array<EnvironmentInfo> };

export type ListCollectionRequestsInput = { key: ResourceKey };

export type ListCollectionsOutput = Array<CollectionInfo>;

export type OpenCollectionInput = { path: string };

export type OpenCollectionOutput = { key: ResourceKey; path: string };

export type UpdateCollectionEntryInput = { id: Identifier; newName: string | null };

export type UpdateCollectionEntryOutput = { id: Identifier };

export type UpdateStateInput =
  | { "updateEditorPartState": EditorPartState }
  | { "updateSidebarPartState": SidebarPartState }
  | { "updatePanelPartState": PanelPartState };
