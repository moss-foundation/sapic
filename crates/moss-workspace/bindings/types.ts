// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import { JsonValue, ResourceKey } from "@repo/bindings-utils";
import type { Identifier } from "./primitives";

export type CollectionInfo = { id: Identifier; displayName: string; order?: number };

export type EditorGridLeafData = { views: Array<string>; activeView: string; id: string };

export type EditorGridNode =
  | { "type": "branch"; data: Array<EditorGridNode>; size: number }
  | { "type": "leaf"; data: EditorGridLeafData; size: number };

export type EditorGridOrientation = "HORIZONTAL" | "VERTICAL";

export type EditorGridState = {
  root: EditorGridNode;
  width: number;
  height: number;
  orientation: EditorGridOrientation;
};

export type EditorPanelState = {
  id: string;
  contentComponent?: string;
  tabComponent?: string;
  title?: string;
  renderer?: PanelRenderer;
  params?: { [key: string]: JsonValue };
  minimumWidth?: number;
  minimumHeight?: number;
  maximumWidth?: number;
  maximumHeight?: number;
};

export type EditorPartState = { grid: EditorGridState; panels: Record<string, EditorPanelState>; activeGroup?: string };

export type EnvironmentInfo = { key: ResourceKey; collectionKey?: ResourceKey; name: string; order?: number };

export type PanelPartState = { preferredSize: number; isVisible: boolean };

export type PanelRenderer = "onlyWhenVisible" | "always";

export type SidebarPartState = { preferredSize: number; isVisible: boolean };

export type StreamCollectionsEvent = { id: Identifier; displayName: string; order: number | null };

export type WorkspaceMode = "DESIGN_FIRST" | "REQUEST_FIRST";
