// Generated by ts-to-zod
import { variableInfoSchema } from "@repo/moss-environment";
import { z } from "zod";
import {
  activitybarPartStateSchema,
  collectionInfoSchema,
  editorPartStateSchema,
  environmentInfoSchema,
  panelPartStateSchema,
  sidebarPartStateSchema,
} from "./types.zod";

export const createCollectionInputSchema = z.object({
  name: z.string(),
  order: z.number().optional(),
  externalPath: z.string().optional(),
});

export const createCollectionOutputSchema = z.object({
  id: z.string(),
});

export const deleteCollectionInputSchema = z.object({
  id: z.string(),
});

export const deleteCollectionOutputSchema = z.object({
  id: z.string(),
});

export const describeEnvironmentInputSchema = z.object({
  id: z.string(),
});

export const updateCollectionEntryInputSchema = z.object({
  id: z.string(),
  newName: z.string().nullable(),
  order: z.number().optional(),
  pinned: z.boolean().optional(),
});

export const updateCollectionEntryOutputSchema = z.object({
  id: z.string(),
});
export const describeEnvironmentOutputSchema = z.object({
  variables: variableInfoSchema,
});

export const describeStateOutputSchema = z.object({
  editor: editorPartStateSchema.optional(),
  sidebar: sidebarPartStateSchema.optional(),
  panel: panelPartStateSchema.optional(),
  activitybar: activitybarPartStateSchema.optional(),
});

export const describeWorkspaceOutputSchema = z.object({
  collections: z.array(collectionInfoSchema),
  environments: z.array(environmentInfoSchema),
});

export const updateStateInputSchema = z.union([
  z.object({
    "updateEditorPartState": editorPartStateSchema,
  }),
  z.object({
    "updateSidebarPartState": sidebarPartStateSchema,
  }),
  z.object({
    "updatePanelPartState": panelPartStateSchema,
  }),
  z.object({
    "updateActivitybarPartState": activitybarPartStateSchema,
  }),
]);
