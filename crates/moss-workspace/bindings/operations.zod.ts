// Generated by ts-to-zod
import { changePathSchema, changeStringSchema } from "@repo/moss-bindingutils";
import { z } from "zod";
import { changeCollectionIdSchema } from "./primitives.zod";
import {
  activitybarPartStateInfoSchema,
  addVariableParamsSchema,
  editorPartStateInfoSchema,
  panelPartStateInfoSchema,
  sidebarPartStateInfoSchema,
  updateVariableParamsSchema,
  variableInfoSchema,
} from "./types.zod";

export const batchUpdateCollectionParamsSchema = z.object({
  id: z.string(),
  order: z.number().optional(),
  expanded: z.boolean().optional(),
});

export const batchUpdateCollectionOutputSchema = z.object({
  ids: z.array(z.string()),
});

export const createCollectionInputSchema = z.object({
  name: z.string(),
  order: z.number(),
  externalPath: z.string().optional(),
  repository: z.string().optional(),
  iconPath: z.string().optional(),
});

export const createCollectionOutputSchema = z.object({
  id: z.string(),
  name: z.string(),
  order: z.number().optional(),
  expanded: z.boolean(),
  iconPath: z.string().optional(),
});

export const createEnvironmentInputSchema = z.object({
  collectionId: z.string().optional(),
  name: z.string(),
  order: z.number(),
  color: z.string().optional(),
});

export const createEnvironmentOutputSchema = z.object({
  id: z.string(),
  collectionId: z.string().optional(),
  name: z.string(),
  order: z.number().optional(),
  color: z.string().optional(),
  expanded: z.boolean().optional(),
});

export const deleteCollectionInputSchema = z.object({
  id: z.string(),
});

export const deleteCollectionOutputSchema = z.object({
  id: z.string(),
});

export const describeEnvironmentInputSchema = z.object({
  id: z.string(),
});

export const streamCollectionsOutputSchema = z.object({});

export const streamEnvironmentsOutputSchema = z.object({});

export const updateCollectionOutputSchema = z.object({
  id: z.string(),
});

export const updateEnvironmentOutputSchema = z.object({
  id: z.string(),
});
export const batchUpdateCollectionInputSchema = z.object({
  items: z.array(batchUpdateCollectionParamsSchema),
});

export const describeEnvironmentOutputSchema = z.object({
  variables: variableInfoSchema,
});

export const describeStateOutputSchema = z.object({
  editor: editorPartStateInfoSchema.optional(),
  sidebar: sidebarPartStateInfoSchema.optional(),
  panel: panelPartStateInfoSchema.optional(),
  activitybar: activitybarPartStateInfoSchema.optional(),
});

export const updateCollectionInputSchema = z.object({
  id: z.string(),
  name: z.string().optional(),
  repository: changeStringSchema.optional(),
  iconPath: changePathSchema.optional(),
  order: z.number().optional(),
  pinned: z.boolean().optional(),
  expanded: z.boolean().optional(),
});

export const updateEnvironmentInputSchema = z.object({
  id: z.string(),
  collectionId: changeCollectionIdSchema.optional(),
  name: z.string().optional(),
  order: z.number().optional(),
  color: changeStringSchema.optional(),
  expanded: z.boolean().optional(),
  varsToAdd: z.array(addVariableParamsSchema),
  varsToUpdate: z.array(updateVariableParamsSchema),
  varsToDelete: z.array(z.string()),
});

export const updateStateInputSchema = z.union([
  z.object({
    "updateEditorPartState": editorPartStateInfoSchema,
  }),
  z.object({
    "updateSidebarPartState": sidebarPartStateInfoSchema,
  }),
  z.object({
    "updatePanelPartState": panelPartStateInfoSchema,
  }),
  z.object({
    "updateActivitybarPartState": activitybarPartStateInfoSchema,
  }),
]);
