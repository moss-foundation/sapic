// Generated by ts-to-zod
import { z } from "zod";

import { type JsonValue } from "./primitives";

export const changeBoolSchema = z.union([
  z.object({
    "UPDATE": z.boolean(),
  }),
  z.literal("REMOVE"),
]);

export const jsonValueSchema: z.ZodSchema<JsonValue> = z.lazy(() =>
  z.union([z.number(), z.string(), z.boolean(), z.array(jsonValueSchema), z.any()]).nullable()
);

export const changePathSchema = z.union([
  z.object({
    "UPDATE": z.string(),
  }),
  z.literal("REMOVE"),
]);

export const changeStringSchema = z.union([
  z.object({
    "UPDATE": z.string(),
  }),
  z.literal("REMOVE"),
]);

export const changeUsizeSchema = z.union([
  z.object({
    "UPDATE": z.number(),
  }),
  z.literal("REMOVE"),
]);

export const changeJsonValueSchema = z.union([
  z.object({
    "UPDATE": jsonValueSchema,
  }),
  z.literal("REMOVE"),
]);
