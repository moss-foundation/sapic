local contrib = import "../../../contrib/index.libsonnet";

contrib.Register(
    resource_params = contrib.resource.ResourceParams(
        statuses = [
            contrib.resource.Status(
                name = "Designing",
                description = "Resource is in design phase.",
                color = "#4CAF50",
            ),
            contrib.resource.Status(
                name = "Pending",
                description = "Resource is planned but not started.",
                color = "#F4A100",
            ),
            contrib.resource.Status(
                name = "Developing",
                description = "Resource is under development.",
                color = "#1976D2",
            ),
            contrib.resource.Status(
                name = "Obsolete",
                description = "Resource is outdated and unused.",
                color = "#9E9E9E",
            ),
            contrib.resource.Status(
                name = "Integrating",
                description = "Resource is being integrated.",
                color = "#E91E63",
            ),
            contrib.resource.Status(
                name = "Testing",
                description = "Resource is in testing phase.",
                color = "#F57C00",
            ),
            contrib.resource.Status(
                name = "Tested",
                description = "Resource testing is complete.",
                color = "#9C27B0",  
            ),
            contrib.resource.Status(
                name = "Released",
                description = "Resource is released for use.",
                color = "#2E7D32", 
            ),
            contrib.resource.Status(
                name = "Deprecated",
                description = "Resource is supported but discouraged.",
                color = "#757575", 
            ),
            contrib.resource.Status(
                name = "Exception",
                description = "Resource is in error state.",
                color = "#D32F2F",  
            ),
        ],
        headers = [
            contrib.resource.Header(
                name = "Cache-Control",
                description = "Directives for caching mechanisms in requests and responses",
                value = "no-cache",
                protected = true,
                disabled = false,
            ),
            contrib.resource.Header(
                name = "Sapic-Token",
                description = "Unique token generated by Sapic to prevent request replay",
                value = "<calculated when request is sent>",
                protected = true,
                disabled = false,
            ),
            contrib.resource.Header(
                name = "Content-Type",
                description = "Indicates the media type of the request body",
                value = "application/json",
                disabled = false,
            ),
            contrib.resource.Header(
                name = "Content-Length",
                description = "Size of the request body in bytes",
                value = "<calculated when request is sent>",
                disabled = false,
            ),
            contrib.resource.Header(
                name = "Host",
                description = "Specifies the domain name of the server",
                value = "<calculated when request is sent>",
                disabled = false,
            ),
            contrib.resource.Header(
                name = "User-Agent",
                description = "Identifies the client software making the request",
                value = "Sapic/%s" % contrib.data.version,
                disabled = false,
            ),
            contrib.resource.Header(
                name = "Accept",
                description = "Indicates the content types acceptable for the response",
                value = "*/*",
                disabled = false,
            ),
            contrib.resource.Header(
                name = "Accept-Encoding",
                description = "Specifies acceptable content encodings",
                value = "gzip, deflate, br",
                disabled = false,
            ),
            contrib.resource.Header(
                name = "Connection",
                description = "Controls whether the network connection stays open",
                value = "keep-alive",
                disabled = false,
            ),
        ],
    ),
)
