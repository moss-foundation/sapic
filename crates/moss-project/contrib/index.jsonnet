local contrib = import "../../../contrib/index.libsonnet";

contrib.Register(
    resourceStatuses = [
        contrib.resource.ResourceStatus(
            name = "Designing",
            description = "Resource is in design phase.",
            color = "#4CAF50",
        ),
        contrib.resource.ResourceStatus(
            name = "Pending",
            description = "Resource is planned but not started.",
            color = "#F4A100",
        ),
        contrib.resource.ResourceStatus(
            name = "Developing",
            description = "Resource is under development.",
            color = "#1976D2",
        ),
        contrib.resource.ResourceStatus(
            name = "Obsolete",
            description = "Resource is outdated and unused.",
            color = "#9E9E9E",
        ),
        contrib.resource.ResourceStatus(
            name = "Integrating",
            description = "Resource is being integrated.",
            color = "#E91E63",
        ),
        contrib.resource.ResourceStatus(
            name = "Testing",
            description = "Resource is in testing phase.",
            color = "#F57C00",
        ),
        contrib.resource.ResourceStatus(
            name = "Tested",
            description = "Resource testing is complete.",
            color = "#9C27B0",  
        ),
        contrib.resource.ResourceStatus(
            name = "Released",
            description = "Resource is released for use.",
            color = "#2E7D32", 
        ),
        contrib.resource.ResourceStatus(
            name = "Deprecated",
            description = "Resource is supported but discouraged.",
            color = "#757575", 
        ),
        contrib.resource.ResourceStatus(
            name = "Exception",
            description = "Resource is in error state.",
            color = "#D32F2F",  
        ),
    ],
    httpHeaders = [
        contrib.resource.HttpHeader(
            name = "Cache-Control",
            description = "Directives for caching mechanisms in requests and responses",
            value = "no-cache",
            protected = true,
            disabled = false,
        ),
        contrib.resource.HttpHeader(
            name = "Sapic-Token",
            description = "Unique token generated by Sapic to prevent request replay",
            value = "<calculated when request is sent>",
            protected = true,
            disabled = false,
        ),
        contrib.resource.HttpHeader(
            name = "Content-Type",
            description = "Indicates the media type of the request body",
            value = "application/json",
            disabled = false,
        ),
        contrib.resource.HttpHeader(
            name = "Content-Length",
            description = "Size of the request body in bytes",
            value = "<calculated when request is sent>",
            disabled = false,
        ),
        contrib.resource.HttpHeader(
            name = "Host",
            description = "Specifies the domain name of the server",
            value = "<calculated when request is sent>",
            disabled = false,
        ),
        contrib.resource.HttpHeader(
            name = "User-Agent",
            description = "Identifies the client software making the request",
            value = "Sapic/%s" % contrib.data.version,
            disabled = false,
        ),
        contrib.resource.HttpHeader(
            name = "Accept",
            description = "Indicates the content types acceptable for the response",
            value = "*/*",
            disabled = false,
        ),
        contrib.resource.HttpHeader(
            name = "Accept-Encoding",
            description = "Specifies acceptable content encodings",
            value = "gzip, deflate, br",
            disabled = false,
        ),
        contrib.resource.HttpHeader(
            name = "Connection",
            description = "Controls whether the network connection stays open",
            value = "keep-alive",
            disabled = false,
        ),
    ],
)
