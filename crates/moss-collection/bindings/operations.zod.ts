// Generated by ts-to-zod
import { z } from "zod";
import {
  afterUpdateDirEntryDescriptionSchema,
  afterUpdateItemEntryDescriptionSchema,
  dirConfigurationModelSchema,
  itemConfigurationModelSchema,
  updateDirEntryParamsSchema,
  updateItemEntryParamsSchema,
} from "./types.zod";

export const batchUpdateEntryOutputSchema = z.record(z.never());

export const createEntryOutputSchema = z.object({
  id: z.string(),
});

export const deleteEntryInputSchema = z.object({
  id: z.string(),
});

export const deleteEntryOutputSchema = z.object({
  id: z.string(),
});

export const streamEntriesOutputSchema = z.record(z.never());
export const batchUpdateEntryKindSchema = z.union([
  z.object({
    "ITEM": updateItemEntryParamsSchema,
  }),
  z.object({
    "DIR": updateDirEntryParamsSchema,
  }),
]);

export const batchUpdateEntryOutputKindSchema = z.union([
  z.object({
    "ITEM": afterUpdateItemEntryDescriptionSchema,
  }),
  z.object({
    "DIR": afterUpdateDirEntryDescriptionSchema,
  }),
]);

export const createDirEntryInputSchema = z.object({
  path: z.string(),
  name: z.string(),
  order: z.number(),
  configuration: dirConfigurationModelSchema,
});

export const createItemEntryInputSchema = z.object({
  path: z.string(),
  name: z.string(),
  order: z.number(),
  configuration: itemConfigurationModelSchema,
});

export const updateEntryInputSchema = z.union([
  z.object({
    "ITEM": updateItemEntryParamsSchema,
  }),
  z.object({
    "DIR": updateDirEntryParamsSchema,
  }),
]);

export const updateEntryOutputSchema = z.union([
  z.object({
    "ITEM": afterUpdateItemEntryDescriptionSchema,
  }),
  z.object({
    "DIR": afterUpdateDirEntryDescriptionSchema,
  }),
]);

export const batchUpdateEntryInputSchema = z.object({
  entries: z.array(batchUpdateEntryKindSchema),
});

export const createEntryInputSchema = z.union([
  z.object({
    "item": createItemEntryInputSchema,
  }),
  z.object({
    "dir": createDirEntryInputSchema,
  }),
]);
