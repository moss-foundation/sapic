// Generated by ts-to-zod
import { z } from "zod";
import { entryIdSchema } from "./types.zod";
import { headerParamItemSchema } from "./types.zod";
import { httpMethodSchema } from "./types.zod";
import { pathParamItemSchema } from "./types.zod";
import { queryParamItemSchema } from "./types.zod";
import { requestBodySchema } from "./types.zod";
import { requestNodeInfoSchema } from "./types.zod";
import { resourceKeySchema } from "@repo/bindings-utils";

export const createRequestGroupInputSchema = z.object({
  path: z.string(),
});

export const streamEntriesByPrefixesInputSchema = z.array(z.string());
export const createRequestGroupOutputSchema = z.object({
  key: resourceKeySchema,
});

export const createRequestProtocolSpecificPayloadSchema = z.object({
  "http": z.object({
    method: httpMethodSchema,
    query_params: z.array(queryParamItemSchema),
    path_params: z.array(pathParamItemSchema),
    headers: z.array(headerParamItemSchema),
    body: requestBodySchema.nullable(),
  }),
});

export const createRequestOutputSchema = z.object({
  key: resourceKeySchema,
});

export const deleteRequestGroupInputSchema = z.object({
  key: resourceKeySchema,
});

export const deleteRequestInputSchema = z.object({
  key: resourceKeySchema,
});

export const entryInfoSchema = z.object({
  id: entryIdSchema,
  path: z.string(),
});

export const listRequestsOutputSchema = z.array(requestNodeInfoSchema);

export const renameRequestGroupInputSchema = z.object({
  key: resourceKeySchema,
  newName: z.string(),
});

export const renameRequestGroupOutputSchema = z.object({
  key: resourceKeySchema,
  affectedItems: z.array(resourceKeySchema),
});

export const renameRequestInputSchema = z.object({
  key: resourceKeySchema,
  newName: z.string(),
});

export const streamEntriesByPrefixesEventSchema = z.array(entryInfoSchema);

export const createRequestInputSchema = z.object({
  name: z.string(),
  relativePath: z.string().optional(),
  url: z.string().optional(),
  payload: createRequestProtocolSpecificPayloadSchema.optional(),
});
