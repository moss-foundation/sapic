// This file was generated by misc/importer.py. Do not edit this file manually.
//
// The necessary import statements have been automatically added by a Python script.
// This ensures that all required dependencies are correctly referenced and available
// within this module.
//
// If you need to add or modify imports, please update the package.json and
// re-run `make gen-models` it to regenerate the file accordingly.

import type { HeaderParamItem, HttpMethod, PathParamItem, QueryParamItem, RequestBody, RequestNodeInfo } from "./types";
import type { ResourceKey } from "@repo/bindings-utils";

export type CreateRequestGroupInput = { path: string };

export type CreateRequestGroupOutput = { key: ResourceKey };

export type CreateRequestInput = {
  name: string;
  relativePath?: string;
  url?: string;
  payload?: CreateRequestProtocolSpecificPayload;
};

export type CreateRequestOutput = { key: ResourceKey };

/**
 * All the path and file names passed in the input should be unencoded.
 * For example, a name of "workspace.name" will be encoded as "workspace%2Ename"
 * The frontend should simply use the name and path used in the user's original input
 */
export type CreateRequestProtocolSpecificPayload = {
  "http": {
    method: HttpMethod;
    query_params: Array<QueryParamItem>;
    path_params: Array<PathParamItem>;
    headers: Array<HeaderParamItem>;
    body: RequestBody | null;
  };
};

export type DeleteRequestGroupInput = { key: ResourceKey };

export type DeleteRequestInput = { key: ResourceKey };

export type ListRequestsOutput = Array<RequestNodeInfo>;

export type RenameRequestGroupInput = { key: ResourceKey; newName: string };

export type RenameRequestInput = { key: ResourceKey; newName: string };
