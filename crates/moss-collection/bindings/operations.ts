// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import { JsonValue } from "@repo/bindings-utils";
import type {
  Classification,
  EntryId,
  HeaderParamItem,
  HttpMethod,
  PathChangeKind,
  PathParamItem,
  QueryParamItem,
  RequestBody,
  RequestProtocol,
} from "./types";

export type CreateEntryInput = {
  destination: string;
  classification: Classification;
  specification?: JsonValue;
  protocol: RequestProtocol | null;
  order: number | null;
  isDir: boolean;
};

export type CreateEntryOutput = { virtualChanges: Array<[string, EntryId, PathChangeKind]> };

export type CreateRequestProtocolSpecificPayload = {
  "http": {
    method: HttpMethod;
    query_params: Array<QueryParamItem>;
    path_params: Array<PathParamItem>;
    headers: Array<HeaderParamItem>;
    body: RequestBody | null;
  };
};

export type DeleteEntryInput = { id: EntryId };

export type DeleteEntryOutput = { virtualChanges: Array<[string, EntryId, PathChangeKind]> };

export type StreamEntriesByPrefixesInput = Array<string>;

export type UpdateEntryInput = {
  id: EntryId;
  name: string | null;
  classification: Classification | null;
  specification?: JsonValue;
  protocol: RequestProtocol | null;
  order: number | null;
};

export type UpdateEntryOutput = { virtualChanges: Array<[string, EntryId, PathChangeKind]> };
