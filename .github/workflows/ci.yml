name: CI

on:
  push:
    branches: ["main"]
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  CARGO_PROFILE_DEV_DEBUG: 0

jobs:
  check-modified-files:
    runs-on: ubuntu-latest
    outputs:
      node: ${{ steps.node.outputs.any_changed }}
      rust: ${{ steps.rust.outputs.any_changed }}
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get all changed Rust files
        id: rust
        uses: tj-actions/changed-files@823fcebdb31bb35fdf2229d9f769b400309430d0 # v46.0.3
        with:
          files: |
            **.rs
            Cargo.toml
          files_ignore: |
            .github/**

      - name: Get all changed NodeJS files
        id: node
        uses: tj-actions/changed-files@823fcebdb31bb35fdf2229d9f769b400309430d0 # v46.0.3
        with:
          files: |
            **.ts
            **.tsx
            **.js
            **.jsx
            package.json

  rust-general-workflows:
    name: Rust General Workflows
    needs: check-modified-files
    if: ${{ needs.check-modified-files.outputs.rust == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@4305c38b25d97ef35a8ad1f985ccf2d2242004f2 # stable

      - name: Use Linux Apt Cache
        uses: awalsh128/cache-apt-pkgs-action@7ca5f46d061ad9aa95863cd9b214dd48edef361d # latest
        with:
          packages: |
            libwebkit2gtk-4.1-dev
            libappindicator3-dev
            librsvg2-dev
            patchelf

      - name: Use Rust Cache
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
        with:
          workspaces: ".github/cache"

      - name: Workspace Audit
        run: |
          cd "${GITHUB_WORKSPACE}/tools/xtask"
          cargo -q run -- --fail-fast audit

  rust-tests:
    name: Rust Tests - ${{ matrix.package }}
    needs: check-modified-files
    if: ${{ needs.check-modified-files.outputs.rust == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        package:
          - moss_git
          - moss_git_hosting_provider
          - moss_tauri
          - moss_text
          - moss_collection
          - moss_app
          - moss_db
          - moss_fs
          - moss_keyring
          - moss_vault
          - moss_workspace
          - moss_environment
          - moss_testutils
          - moss_common
          - moss_workbench
          - moss_storage
          - moss_activity_indicator
          - moss_file
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@4305c38b25d97ef35a8ad1f985ccf2d2242004f2 # stable

      - name: Use Linux Apt Cache
        uses: awalsh128/cache-apt-pkgs-action@7ca5f46d061ad9aa95863cd9b214dd48edef361d # latest
        with:
          packages: |
            libwebkit2gtk-4.1-dev
            libappindicator3-dev
            librsvg2-dev
            patchelf

      - name: Use Rust Cache
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8

      - name: Run Tests - ${{ matrix.package }}
        run: cargo test -p ${{ matrix.package }}

  # Run Rust Lint Check in each package individually.
  # Right now it includes warnings check and grit check
  # This job is skipped for draft pull requests to allow developers to work
  # without being blocked by warnings during the development process.
  # Warnings checks will run when the PR is marked as ready for review.
  rust-lint-check:
    name: Rust Lint Check
    needs: check-modified-files
    if: ${{ needs.check-modified-files.outputs.rust == 'true' && (github.event_name != 'pull_request' || github.event.pull_request.draft == false) }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        package:
          - moss_git
          - moss_git_hosting_provider
          - moss_tauri
          - moss_text
          - moss_collection
          - moss_app
          - moss_db
          - moss_fs
          - moss_keyring
          # - moss_vault
          - moss_workspace
          - moss_environment
          - moss_testutils
          - moss_common
          - moss_workbench
          - moss_storage
          - moss_activity_indicator
          - moss_file
          - desktop
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@4305c38b25d97ef35a8ad1f985ccf2d2242004f2 # stable

      - name: Use Linux Apt Cache
        uses: awalsh128/cache-apt-pkgs-action@7ca5f46d061ad9aa95863cd9b214dd48edef361d # latest
        with:
          packages: |
            libwebkit2gtk-4.1-dev
            libappindicator3-dev
            librsvg2-dev
            patchelf

      - name: Use Rust Cache
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8

      - name: Install Grit
        run: |
          curl -fsSL https://docs.grit.io/install | bash

      - name: Init Grit
        run: |
          grit init

      - name: Clean cargo cache for warnings check
        run: cargo clean -p ${{ matrix.package }}

      - name: Rust Warnings Check - ${{ matrix.package }}
        run: python3 .github/scripts/rust_warnings_check.py -p ${{ matrix.package }}

      - name: Rust Grit Check - ${{ matrix.package }}
        run: python3 .github/scripts/rust_grit_check.py -p ${{ matrix.package }}
  
  node-workflows:
    name: Node.js Workflows - ${{ matrix.task.name }}
    needs: check-modified-files
    if: ${{ needs.check-modified-files.outputs.node == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        task:
          - name: Lint
            command: |
              pnpm run lint -- --quiet

          - name: Test Packages
            command: pnpm run test --project packages

          - name: Test Moss-Tabs
            command: pnpm run test --project moss-tabs

          - name: Test Desktop
            command: pnpm run test --project desktop

    timeout-minutes: 30
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install PNPM
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Set Up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: "package.json"
          cache: "pnpm"

      - name: Install Dependencies
        run: pnpm install

      - name: Install Dependencies for desktop # TODO: This is a hack to get around eslint issues
        run: cd view/desktop && pnpm install --force

      - name: Install Playwright Browsers
        run: pnpm exec playwright install chromium --with-deps

      - name: Cache optional Playwright paths
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json', 'pnpm-lock.yaml') }}

      - name: Setup uv
        uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb # v6.1.0

      - name: Build Icons
        run: make gen-icons

      - name: Execute Task - ${{ matrix.task.name }}
        run: ${{ matrix.task.command }}
