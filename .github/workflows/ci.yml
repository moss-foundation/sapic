name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  CARGO_PROFILE_DEV_DEBUG: 0

jobs:
  check-modified-files:
    runs-on: ubuntu-latest
    outputs:
      node: ${{ steps.node.outputs.any_changed }}
      rust: ${{ steps.rust.outputs.any_changed }}
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get all changed Rust files
        id: rust
        uses: tj-actions/changed-files@48d8f15b2aaa3d255ca5af3eba4870f807ce6b3c # v45.0.2
        with:
          files: |
            **.rs
            Cargo.toml

      - name: Get all changed NodeJS files
        id: node
        uses: tj-actions/changed-files@48d8f15b2aaa3d255ca5af3eba4870f807ce6b3c # v45.0.2
        with:
          files: |
            **.ts
            **.tsx
            **.js
            **.jsx
            package.json

  rust-general-workflows:
    name: Rust General Workflows
    needs: check-modified-files
    if: ${{ needs.check-modified-files.outputs.rust == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@f9f65f52341ba3c1d5e1901c77dc7a9e58186191 # stable

      - name: Refresh packages list
        run: sudo apt update

      - name: Use Linux Apt Cache
        uses: awalsh128/cache-apt-pkgs-action@7ca5f46d061ad9aa95863cd9b214dd48edef361d # latest
        with:
          packages: |
            libwebkit2gtk-4.0-dev
            libwebkit2gtk-4.1-dev
            libappindicator3-dev
            librsvg2-dev
            patchelf

      - name: Use Rust Cache
        uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab # v2.7.5
        with:
          workspaces: ".github/cache"

      - name: Run Unit Tests
        run: cargo -q test --lib
        working-directory: ".github/cache"

      - name: Workspace Audit
        run: |
          cd "${GITHUB_WORKSPACE}/tools/xtask"
          cargo -q run -- --fail-fast rwa

  node-workflows:
    name: Node.js Workflows - ${{ matrix.task.name }}
    needs: check-modified-files
    if: ${{ needs.check-modified-files.outputs.node == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        task:
          - name: Lint
            command: pnpm run lint -- --quiet

          - name: Test Packages
            command: pnpm run test --project packages

          - name: Test Moss-Tabs
            command: pnpm run test --project moss-tabs

    timeout-minutes: 30
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install PNPM
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Set Up Node.js
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version-file: "package.json"
          cache: "pnpm"

      - name: Install Dependencies
        run: pnpm install

      - name: Install Playwright Browsers
        run: npx playwright install chromium --with-deps

      - name: Cache optional Playwright paths
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json', 'pnpm-lock.yaml') }}

      - name: Build Icons
        run: make gen-icons

      - name: Execute Task - ${{ matrix.task.name }}
        run: ${{ matrix.task.command }}
